version: '3'
services:
  postgres:
    image: postgres:13
    container_name: rodo-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rodo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: rodo-backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: ${BACKEND_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      JWT_SECRET: rodo_secret_key_change_in_production
      JWT_EXPIRATION: 3600
      CORS_ORIGIN: http://localhost:${FRONTEND_PORT}
    networks:
      - rodo-network

  frontend:
    build:
      context: .
      args:
        - REACT_APP_API_URL=http://localhost:${BACKEND_PORT}/api/v1
        - REACT_APP_WS_URL=ws://localhost:${BACKEND_PORT}/ws
    container_name: rodo-frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
    networks:
      - rodo-network

networks:
  rodo-network:
    driver: bridge

volumes:
  postgres_data:
